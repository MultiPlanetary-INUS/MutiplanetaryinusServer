/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var MessageID_pb = require('./MessageID_pb.js');
goog.exportSymbol('proto.GamePKG.AddSkill', null, global);
goog.exportSymbol('proto.GamePKG.ChangeItemPos', null, global);
goog.exportSymbol('proto.GamePKG.DelSkill', null, global);
goog.exportSymbol('proto.GamePKG.ItemCF', null, global);
goog.exportSymbol('proto.GamePKG.ItemList', null, global);
goog.exportSymbol('proto.GamePKG.ItemPos', null, global);
goog.exportSymbol('proto.GamePKG.RemoveItem', null, global);
goog.exportSymbol('proto.GamePKG.UseItem', null, global);
goog.exportSymbol('proto.GamePKG.UseSkill', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.ItemCF = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.ItemCF, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.ItemCF.displayName = 'proto.GamePKG.ItemCF';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.ItemCF.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.ItemCF.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.ItemCF} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ItemCF.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    itemid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    typeid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    count: jspb.Message.getFieldWithDefault(msg, 7, 0),
    container: jspb.Message.getFieldWithDefault(msg, 8, 0),
    index: jspb.Message.getFieldWithDefault(msg, 9, 0),
    binded: jspb.Message.getFieldWithDefault(msg, 10, false),
    locked: jspb.Message.getFieldWithDefault(msg, 11, false),
    durability: jspb.Message.getFieldWithDefault(msg, 12, 0),
    durabilitymax: jspb.Message.getFieldWithDefault(msg, 13, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 14, 0),
    gettime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    locktime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    timesremain: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.ItemCF}
 */
proto.GamePKG.ItemCF.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.ItemCF;
  return proto.GamePKG.ItemCF.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.ItemCF} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.ItemCF}
 */
proto.GamePKG.ItemCF.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTypeid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 8:
      var value = /** @type {!proto.ItemContainerType} */ (reader.readEnum());
      msg.setContainer(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBinded(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocked(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurability(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurabilitymax(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGettime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLocktime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimesremain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.ItemCF.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.ItemCF.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.ItemCF} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ItemCF.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getItemid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTypeid();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getContainer();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getBinded();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getLocked();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getDurability();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDurabilitymax();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getGettime();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getLocktime();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getTimesremain();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.ItemCF.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.ItemCF.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 ItemID = 5;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getItemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setItemid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 TypeID = 6;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getTypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setTypeid = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 Count = 7;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional ItemContainerType Container = 8;
 * @return {!proto.ItemContainerType}
 */
proto.GamePKG.ItemCF.prototype.getContainer = function() {
  return /** @type {!proto.ItemContainerType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.ItemContainerType} value */
proto.GamePKG.ItemCF.prototype.setContainer = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional int32 Index = 9;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool Binded = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.GamePKG.ItemCF.prototype.getBinded = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.GamePKG.ItemCF.prototype.setBinded = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool Locked = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.GamePKG.ItemCF.prototype.getLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.GamePKG.ItemCF.prototype.setLocked = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int32 Durability = 12;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getDurability = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setDurability = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 DurabilityMax = 13;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getDurabilitymax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setDurabilitymax = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 Duration = 14;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint64 GetTime = 15;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getGettime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setGettime = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional uint64 LockTime = 16;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setLocktime = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 TimesRemain = 17;
 * @return {number}
 */
proto.GamePKG.ItemCF.prototype.getTimesremain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.GamePKG.ItemCF.prototype.setTimesremain = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.ItemList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GamePKG.ItemList.repeatedFields_, null);
};
goog.inherits(proto.GamePKG.ItemList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.ItemList.displayName = 'proto.GamePKG.ItemList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GamePKG.ItemList.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.ItemList.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.ItemList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.ItemList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ItemList.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.GamePKG.ItemCF.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.ItemList}
 */
proto.GamePKG.ItemList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.ItemList;
  return proto.GamePKG.ItemList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.ItemList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.ItemList}
 */
proto.GamePKG.ItemList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = new proto.GamePKG.ItemCF;
      reader.readMessage(value,proto.GamePKG.ItemCF.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.ItemList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.ItemList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.ItemList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ItemList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.GamePKG.ItemCF.serializeBinaryToWriter
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.ItemList.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.ItemList.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.ItemList.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.ItemList.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.ItemList.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.ItemList.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated ItemCF List = 5;
 * @return {!Array<!proto.GamePKG.ItemCF>}
 */
proto.GamePKG.ItemList.prototype.getListList = function() {
  return /** @type{!Array<!proto.GamePKG.ItemCF>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.GamePKG.ItemCF, 5));
};


/** @param {!Array<!proto.GamePKG.ItemCF>} value */
proto.GamePKG.ItemList.prototype.setListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.GamePKG.ItemCF=} opt_value
 * @param {number=} opt_index
 * @return {!proto.GamePKG.ItemCF}
 */
proto.GamePKG.ItemList.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.GamePKG.ItemCF, opt_index);
};


proto.GamePKG.ItemList.prototype.clearListList = function() {
  this.setListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.RemoveItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.RemoveItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.RemoveItem.displayName = 'proto.GamePKG.RemoveItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.RemoveItem.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.RemoveItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.RemoveItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.RemoveItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    itemid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.RemoveItem}
 */
proto.GamePKG.RemoveItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.RemoveItem;
  return proto.GamePKG.RemoveItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.RemoveItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.RemoveItem}
 */
proto.GamePKG.RemoveItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.RemoveItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.RemoveItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.RemoveItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.RemoveItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getItemid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.RemoveItem.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.RemoveItem.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.RemoveItem.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.RemoveItem.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.RemoveItem.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.RemoveItem.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 ItemID = 5;
 * @return {number}
 */
proto.GamePKG.RemoveItem.prototype.getItemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.RemoveItem.prototype.setItemid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string VerifyCode = 6;
 * @return {string}
 */
proto.GamePKG.RemoveItem.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.GamePKG.RemoveItem.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.ItemPos = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.ItemPos, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.ItemPos.displayName = 'proto.GamePKG.ItemPos';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.ItemPos.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.ItemPos.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.ItemPos} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ItemPos.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: jspb.Message.getFieldWithDefault(msg, 1, 0),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.ItemPos}
 */
proto.GamePKG.ItemPos.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.ItemPos;
  return proto.GamePKG.ItemPos.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.ItemPos} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.ItemPos}
 */
proto.GamePKG.ItemPos.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContainer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.ItemPos.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.ItemPos.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.ItemPos} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ItemPos.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 Container = 1;
 * @return {number}
 */
proto.GamePKG.ItemPos.prototype.getContainer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.GamePKG.ItemPos.prototype.setContainer = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Index = 2;
 * @return {number}
 */
proto.GamePKG.ItemPos.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.ItemPos.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.ChangeItemPos = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.ChangeItemPos, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.ChangeItemPos.displayName = 'proto.GamePKG.ChangeItemPos';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.ChangeItemPos.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.ChangeItemPos.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.ChangeItemPos} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ChangeItemPos.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    itemid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    oldpos: (f = msg.getOldpos()) && proto.GamePKG.ItemPos.toObject(includeInstance, f),
    newpos: (f = msg.getNewpos()) && proto.GamePKG.ItemPos.toObject(includeInstance, f),
    verifycode: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.ChangeItemPos}
 */
proto.GamePKG.ChangeItemPos.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.ChangeItemPos;
  return proto.GamePKG.ChangeItemPos.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.ChangeItemPos} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.ChangeItemPos}
 */
proto.GamePKG.ChangeItemPos.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemid(value);
      break;
    case 6:
      var value = new proto.GamePKG.ItemPos;
      reader.readMessage(value,proto.GamePKG.ItemPos.deserializeBinaryFromReader);
      msg.setOldpos(value);
      break;
    case 7:
      var value = new proto.GamePKG.ItemPos;
      reader.readMessage(value,proto.GamePKG.ItemPos.deserializeBinaryFromReader);
      msg.setNewpos(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.ChangeItemPos.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.ChangeItemPos.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.ChangeItemPos} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ChangeItemPos.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getItemid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getOldpos();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.GamePKG.ItemPos.serializeBinaryToWriter
    );
  }
  f = message.getNewpos();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.GamePKG.ItemPos.serializeBinaryToWriter
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.ChangeItemPos.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.ChangeItemPos.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.ChangeItemPos.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.ChangeItemPos.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.ChangeItemPos.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.ChangeItemPos.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 ItemID = 5;
 * @return {number}
 */
proto.GamePKG.ChangeItemPos.prototype.getItemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.ChangeItemPos.prototype.setItemid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional ItemPos OldPos = 6;
 * @return {?proto.GamePKG.ItemPos}
 */
proto.GamePKG.ChangeItemPos.prototype.getOldpos = function() {
  return /** @type{?proto.GamePKG.ItemPos} */ (
    jspb.Message.getWrapperField(this, proto.GamePKG.ItemPos, 6));
};


/** @param {?proto.GamePKG.ItemPos|undefined} value */
proto.GamePKG.ChangeItemPos.prototype.setOldpos = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.GamePKG.ChangeItemPos.prototype.clearOldpos = function() {
  this.setOldpos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePKG.ChangeItemPos.prototype.hasOldpos = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ItemPos NewPos = 7;
 * @return {?proto.GamePKG.ItemPos}
 */
proto.GamePKG.ChangeItemPos.prototype.getNewpos = function() {
  return /** @type{?proto.GamePKG.ItemPos} */ (
    jspb.Message.getWrapperField(this, proto.GamePKG.ItemPos, 7));
};


/** @param {?proto.GamePKG.ItemPos|undefined} value */
proto.GamePKG.ChangeItemPos.prototype.setNewpos = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.GamePKG.ChangeItemPos.prototype.clearNewpos = function() {
  this.setNewpos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePKG.ChangeItemPos.prototype.hasNewpos = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string VerifyCode = 8;
 * @return {string}
 */
proto.GamePKG.ChangeItemPos.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.GamePKG.ChangeItemPos.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.UseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.UseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.UseItem.displayName = 'proto.GamePKG.UseItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.UseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.UseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.UseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.UseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    targetrole: jspb.Message.getFieldWithDefault(msg, 5, 0),
    itemid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.UseItem}
 */
proto.GamePKG.UseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.UseItem;
  return proto.GamePKG.UseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.UseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.UseItem}
 */
proto.GamePKG.UseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTargetrole(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.UseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.UseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.UseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.UseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getTargetrole();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getItemid();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.UseItem.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.UseItem.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.UseItem.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.UseItem.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.UseItem.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.UseItem.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 TargetRole = 5;
 * @return {number}
 */
proto.GamePKG.UseItem.prototype.getTargetrole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.UseItem.prototype.setTargetrole = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 ItemID = 6;
 * @return {number}
 */
proto.GamePKG.UseItem.prototype.getItemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.GamePKG.UseItem.prototype.setItemid = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string VerifyCode = 7;
 * @return {string}
 */
proto.GamePKG.UseItem.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.GamePKG.UseItem.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.AddSkill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.AddSkill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.AddSkill.displayName = 'proto.GamePKG.AddSkill';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.AddSkill.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.AddSkill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.AddSkill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.AddSkill.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    skillid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    skilllevel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.AddSkill}
 */
proto.GamePKG.AddSkill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.AddSkill;
  return proto.GamePKG.AddSkill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.AddSkill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.AddSkill}
 */
proto.GamePKG.AddSkill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkilllevel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.AddSkill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.AddSkill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.AddSkill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.AddSkill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSkillid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSkilllevel();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.AddSkill.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.AddSkill.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.AddSkill.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.AddSkill.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.AddSkill.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.AddSkill.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 SkillID = 5;
 * @return {number}
 */
proto.GamePKG.AddSkill.prototype.getSkillid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.AddSkill.prototype.setSkillid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 SkillLevel = 6;
 * @return {number}
 */
proto.GamePKG.AddSkill.prototype.getSkilllevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.GamePKG.AddSkill.prototype.setSkilllevel = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string VerifyCode = 7;
 * @return {string}
 */
proto.GamePKG.AddSkill.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.GamePKG.AddSkill.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.UseSkill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.UseSkill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.UseSkill.displayName = 'proto.GamePKG.UseSkill';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.UseSkill.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.UseSkill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.UseSkill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.UseSkill.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    skillid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.UseSkill}
 */
proto.GamePKG.UseSkill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.UseSkill;
  return proto.GamePKG.UseSkill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.UseSkill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.UseSkill}
 */
proto.GamePKG.UseSkill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.UseSkill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.UseSkill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.UseSkill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.UseSkill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSkillid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.UseSkill.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.UseSkill.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.UseSkill.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.UseSkill.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.UseSkill.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.UseSkill.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 SkillID = 5;
 * @return {number}
 */
proto.GamePKG.UseSkill.prototype.getSkillid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.UseSkill.prototype.setSkillid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string VerifyCode = 6;
 * @return {string}
 */
proto.GamePKG.UseSkill.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.GamePKG.UseSkill.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.DelSkill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.DelSkill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.DelSkill.displayName = 'proto.GamePKG.DelSkill';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.DelSkill.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.DelSkill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.DelSkill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.DelSkill.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    skillid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.DelSkill}
 */
proto.GamePKG.DelSkill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.DelSkill;
  return proto.GamePKG.DelSkill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.DelSkill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.DelSkill}
 */
proto.GamePKG.DelSkill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.DelSkill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.DelSkill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.DelSkill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.DelSkill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSkillid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.DelSkill.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.DelSkill.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.DelSkill.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.DelSkill.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 RoleID = 4;
 * @return {number}
 */
proto.GamePKG.DelSkill.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.DelSkill.prototype.setRoleid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 SkillID = 5;
 * @return {number}
 */
proto.GamePKG.DelSkill.prototype.getSkillid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.DelSkill.prototype.setSkillid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string VerifyCode = 6;
 * @return {string}
 */
proto.GamePKG.DelSkill.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.GamePKG.DelSkill.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


goog.object.extend(exports, proto.GamePKG);
