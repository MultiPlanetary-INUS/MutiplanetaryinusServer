/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var MessageID_pb = require('./MessageID_pb.js');
goog.exportSymbol('proto.GamePKG.AskIdentifyCode', null, global);
goog.exportSymbol('proto.GamePKG.AskIdentifyResult', null, global);
goog.exportSymbol('proto.GamePKG.ClientHeart', null, global);
goog.exportSymbol('proto.GamePKG.CompGameInfo', null, global);
goog.exportSymbol('proto.GamePKG.GameLogin', null, global);
goog.exportSymbol('proto.GamePKG.LoginResult', null, global);
goog.exportSymbol('proto.GamePKG.NotifyClient', null, global);
goog.exportSymbol('proto.GamePKG.RegistAccount', null, global);
goog.exportSymbol('proto.GamePKG.SetASafeQuestion', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.CompGameInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.CompGameInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.CompGameInfo.displayName = 'proto.GamePKG.CompGameInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.CompGameInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.CompGameInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.CompGameInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.CompGameInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gameversion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.CompGameInfo}
 */
proto.GamePKG.CompGameInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.CompGameInfo;
  return proto.GamePKG.CompGameInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.CompGameInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.CompGameInfo}
 */
proto.GamePKG.CompGameInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameversion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.CompGameInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.CompGameInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.CompGameInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.CompGameInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGameversion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVerifycode();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.CompGameInfo.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.CompGameInfo.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 GameVersion = 2;
 * @return {number}
 */
proto.GamePKG.CompGameInfo.prototype.getGameversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.CompGameInfo.prototype.setGameversion = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 VerifyCode = 3;
 * @return {number}
 */
proto.GamePKG.CompGameInfo.prototype.getVerifycode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePKG.CompGameInfo.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.ClientHeart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.ClientHeart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.ClientHeart.displayName = 'proto.GamePKG.ClientHeart';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.ClientHeart.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.ClientHeart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.ClientHeart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ClientHeart.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sendtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delaytime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.ClientHeart}
 */
proto.GamePKG.ClientHeart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.ClientHeart;
  return proto.GamePKG.ClientHeart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.ClientHeart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.ClientHeart}
 */
proto.GamePKG.ClientHeart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSendtime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelaytime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.ClientHeart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.ClientHeart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.ClientHeart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.ClientHeart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSendtime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDelaytime();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.ClientHeart.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.ClientHeart.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 SendTime = 2;
 * @return {number}
 */
proto.GamePKG.ClientHeart.prototype.getSendtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.ClientHeart.prototype.setSendtime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 DelayTime = 3;
 * @return {number}
 */
proto.GamePKG.ClientHeart.prototype.getDelaytime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePKG.ClientHeart.prototype.setDelaytime = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.AskIdentifyCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.AskIdentifyCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.AskIdentifyCode.displayName = 'proto.GamePKG.AskIdentifyCode';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.AskIdentifyCode.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.AskIdentifyCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.AskIdentifyCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.AskIdentifyCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    identifyid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    email: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.AskIdentifyCode}
 */
proto.GamePKG.AskIdentifyCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.AskIdentifyCode;
  return proto.GamePKG.AskIdentifyCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.AskIdentifyCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.AskIdentifyCode}
 */
proto.GamePKG.AskIdentifyCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIdentifyid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.AskIdentifyCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.AskIdentifyCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.AskIdentifyCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.AskIdentifyCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIdentifyid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.AskIdentifyCode.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.AskIdentifyCode.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 IdentifyID = 2;
 * @return {number}
 */
proto.GamePKG.AskIdentifyCode.prototype.getIdentifyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.AskIdentifyCode.prototype.setIdentifyid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Email = 3;
 * @return {string}
 */
proto.GamePKG.AskIdentifyCode.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.GamePKG.AskIdentifyCode.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.AskIdentifyResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.AskIdentifyResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.AskIdentifyResult.displayName = 'proto.GamePKG.AskIdentifyResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.AskIdentifyResult.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.AskIdentifyResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.AskIdentifyResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.AskIdentifyResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0),
    identifyid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    info: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.AskIdentifyResult}
 */
proto.GamePKG.AskIdentifyResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.AskIdentifyResult;
  return proto.GamePKG.AskIdentifyResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.AskIdentifyResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.AskIdentifyResult}
 */
proto.GamePKG.AskIdentifyResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIdentifyid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.AskIdentifyResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.AskIdentifyResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.AskIdentifyResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.AskIdentifyResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIdentifyid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.AskIdentifyResult.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.AskIdentifyResult.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 Code = 2;
 * @return {number}
 */
proto.GamePKG.AskIdentifyResult.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.AskIdentifyResult.prototype.setCode = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 IdentifyID = 3;
 * @return {number}
 */
proto.GamePKG.AskIdentifyResult.prototype.getIdentifyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePKG.AskIdentifyResult.prototype.setIdentifyid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string Info = 4;
 * @return {string}
 */
proto.GamePKG.AskIdentifyResult.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.GamePKG.AskIdentifyResult.prototype.setInfo = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.NotifyClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.NotifyClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.NotifyClient.displayName = 'proto.GamePKG.NotifyClient';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.NotifyClient.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.NotifyClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.NotifyClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.NotifyClient.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0),
    info: jspb.Message.getFieldWithDefault(msg, 3, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.NotifyClient}
 */
proto.GamePKG.NotifyClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.NotifyClient;
  return proto.GamePKG.NotifyClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.NotifyClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.NotifyClient}
 */
proto.GamePKG.NotifyClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.NotifyClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.NotifyClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.NotifyClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.NotifyClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.NotifyClient.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.NotifyClient.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 Code = 2;
 * @return {number}
 */
proto.GamePKG.NotifyClient.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.NotifyClient.prototype.setCode = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Info = 3;
 * @return {string}
 */
proto.GamePKG.NotifyClient.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.GamePKG.NotifyClient.prototype.setInfo = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string UserName = 4;
 * @return {string}
 */
proto.GamePKG.NotifyClient.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.GamePKG.NotifyClient.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 UserID = 5;
 * @return {number}
 */
proto.GamePKG.NotifyClient.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.NotifyClient.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.GameLogin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.GameLogin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.GameLogin.displayName = 'proto.GamePKG.GameLogin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.GameLogin.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.GameLogin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.GameLogin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.GameLogin.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.GameLogin}
 */
proto.GamePKG.GameLogin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.GameLogin;
  return proto.GamePKG.GameLogin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.GameLogin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.GameLogin}
 */
proto.GamePKG.GameLogin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.GameLogin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.GameLogin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.GameLogin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.GameLogin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.GameLogin.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.GameLogin.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string UserName = 2;
 * @return {string}
 */
proto.GamePKG.GameLogin.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.GamePKG.GameLogin.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PassWord = 3;
 * @return {string}
 */
proto.GamePKG.GameLogin.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.GamePKG.GameLogin.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string IP = 4;
 * @return {string}
 */
proto.GamePKG.GameLogin.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.GamePKG.GameLogin.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.LoginResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.LoginResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.LoginResult.displayName = 'proto.GamePKG.LoginResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.LoginResult.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.LoginResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.LoginResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.LoginResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    blocktype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    blocktime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    authority: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lastip: jspb.Message.getFieldWithDefault(msg, 8, ""),
    verifycode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    gold: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.LoginResult}
 */
proto.GamePKG.LoginResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.LoginResult;
  return proto.GamePKG.LoginResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.LoginResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.LoginResult}
 */
proto.GamePKG.LoginResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlocktype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlocktime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAuthority(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastip(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.LoginResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.LoginResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.LoginResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.LoginResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBlocktype();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBlocktime();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAuthority();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLastip();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getGold();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.LoginResult.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.LoginResult.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string UserName = 2;
 * @return {string}
 */
proto.GamePKG.LoginResult.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.GamePKG.LoginResult.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 UserID = 3;
 * @return {number}
 */
proto.GamePKG.LoginResult.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePKG.LoginResult.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 State = 4;
 * @return {number}
 */
proto.GamePKG.LoginResult.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePKG.LoginResult.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 BlockType = 5;
 * @return {number}
 */
proto.GamePKG.LoginResult.prototype.getBlocktype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.LoginResult.prototype.setBlocktype = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 BlockTime = 6;
 * @return {number}
 */
proto.GamePKG.LoginResult.prototype.getBlocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.GamePKG.LoginResult.prototype.setBlocktime = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 Authority = 7;
 * @return {number}
 */
proto.GamePKG.LoginResult.prototype.getAuthority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.GamePKG.LoginResult.prototype.setAuthority = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string LastIP = 8;
 * @return {string}
 */
proto.GamePKG.LoginResult.prototype.getLastip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.GamePKG.LoginResult.prototype.setLastip = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string VerifyCode = 9;
 * @return {string}
 */
proto.GamePKG.LoginResult.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.GamePKG.LoginResult.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 Gold = 10;
 * @return {number}
 */
proto.GamePKG.LoginResult.prototype.getGold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.GamePKG.LoginResult.prototype.setGold = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.RegistAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.RegistAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.RegistAccount.displayName = 'proto.GamePKG.RegistAccount';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.RegistAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.RegistAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.RegistAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.RegistAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    birthday: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 5, 0),
    verifycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    verifyid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    ip: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.RegistAccount}
 */
proto.GamePKG.RegistAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.RegistAccount;
  return proto.GamePKG.RegistAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.RegistAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.RegistAccount}
 */
proto.GamePKG.RegistAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthday(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGender(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVerifyid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.RegistAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.RegistAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.RegistAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.RegistAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBirthday();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGender();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getVerifyid();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.RegistAccount.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.RegistAccount.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string UserName = 2;
 * @return {string}
 */
proto.GamePKG.RegistAccount.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.GamePKG.RegistAccount.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PassWord = 3;
 * @return {string}
 */
proto.GamePKG.RegistAccount.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.GamePKG.RegistAccount.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Birthday = 4;
 * @return {string}
 */
proto.GamePKG.RegistAccount.prototype.getBirthday = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.GamePKG.RegistAccount.prototype.setBirthday = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 Gender = 5;
 * @return {number}
 */
proto.GamePKG.RegistAccount.prototype.getGender = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePKG.RegistAccount.prototype.setGender = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string VerifyCode = 6;
 * @return {string}
 */
proto.GamePKG.RegistAccount.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.GamePKG.RegistAccount.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 VerifyID = 7;
 * @return {number}
 */
proto.GamePKG.RegistAccount.prototype.getVerifyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.GamePKG.RegistAccount.prototype.setVerifyid = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string IP = 8;
 * @return {string}
 */
proto.GamePKG.RegistAccount.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.GamePKG.RegistAccount.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePKG.SetASafeQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePKG.SetASafeQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePKG.SetASafeQuestion.displayName = 'proto.GamePKG.SetASafeQuestion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePKG.SetASafeQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePKG.SetASafeQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePKG.SetASafeQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.SetASafeQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    pkgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    question: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answer: jspb.Message.getFieldWithDefault(msg, 4, ""),
    verifycode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePKG.SetASafeQuestion}
 */
proto.GamePKG.SetASafeQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePKG.SetASafeQuestion;
  return proto.GamePKG.SetASafeQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePKG.SetASafeQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePKG.SetASafeQuestion}
 */
proto.GamePKG.SetASafeQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PKGTypeID} */ (reader.readEnum());
      msg.setPkgid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePKG.SetASafeQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePKG.SetASafeQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePKG.SetASafeQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GamePKG.SetASafeQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPkgid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVerifycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional PKGTypeID PkgID = 1;
 * @return {!proto.PKGTypeID}
 */
proto.GamePKG.SetASafeQuestion.prototype.getPkgid = function() {
  return /** @type {!proto.PKGTypeID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PKGTypeID} value */
proto.GamePKG.SetASafeQuestion.prototype.setPkgid = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 UserID = 2;
 * @return {number}
 */
proto.GamePKG.SetASafeQuestion.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePKG.SetASafeQuestion.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Question = 3;
 * @return {string}
 */
proto.GamePKG.SetASafeQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.GamePKG.SetASafeQuestion.prototype.setQuestion = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Answer = 4;
 * @return {string}
 */
proto.GamePKG.SetASafeQuestion.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.GamePKG.SetASafeQuestion.prototype.setAnswer = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string VerifyCode = 5;
 * @return {string}
 */
proto.GamePKG.SetASafeQuestion.prototype.getVerifycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.GamePKG.SetASafeQuestion.prototype.setVerifycode = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.GamePKG);
